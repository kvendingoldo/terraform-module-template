name: "Linters"
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "**"

permissions: read-all

env:
  tf_version: 1.5.7
  tflint_version: v0.54.0
  trivy_version: v0.58.2
  enable_linters_fix_commit: "true"

jobs:
  check_dco:
    runs-on: ubuntu-22.04
    name: Check DCO (Developer Certificate of Origin).
    steps:
      - name: Run dco-check
        uses: christophebedard/dco-check@0.5.0
        with:
          python-version: "3.12"
          args: "--verbose"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  super-linter:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: read
      # To report GitHub Actions status checks
      statuses: write
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Super-Linter
        if: github.event_name == 'pull_request'
        uses: super-linter/super-linter@v7.1.0
        env:
          #
          # validate
          #
          VALIDATE_YAML: true
          VALIDATE_JSON: true
          VALIDATE_SHELL_SHFMT: true
          #
          # fix
          #
          FIX_YAML_PRETTIER: true
          FIX_JSON_PRETTIER: true
          FIX_SHELL_SHFMT: true

          DEFAULT_BRANCH: main
          # Activate reporting to GitHub Actions status checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LINTER_RULES_PATH: .github/linter-rules
        continue-on-error: true

      - name: Run Super-Linter
        if: github.event_name != 'pull_request'
        uses: super-linter/super-linter@v7.1.0
        env:
          VALIDATE_YAML: true
          VALIDATE_JSON: true
          VALIDATE_SHELL_SHFMT: true
          DEFAULT_BRANCH: main
          # Activate reporting to GitHub Actions status checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LINTER_RULES_PATH: .github/linter-rules
        continue-on-error: false

      - name: Commit and push linting fixes
        # Run only on:
        # - Pull requests
        # - Not on the default branch
        if: >
          github.event_name == 'pull_request' &&
          github.ref_name != github.event.repository.default_branch &&
          env.enable_linters_fix_commit == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: ${{ github.event.pull_request.head.ref || github.head_ref || github.ref }}
          commit_message: "chore: fix super-linter linting issues"
          commit_user_name: github-actions[bot]

  terraform-fmt:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.tf_version }}
          terraform_wrapper: false

      - name: Test code with terraform fmt
        if: github.event_name == 'pull_request'
        run: terraform fmt --recursive -no-color
        continue-on-error: true

      - name: Test code with terraform fmt
        if: github.event_name != 'pull_request'
        run: terraform fmt --recursive -check=true -no-color
        continue-on-error: false

      - name: Auto Commit Changes
        if: github.event_name == 'pull_request'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Terraform fmt"
          file_pattern: "*.tf"
          commit_user_name: "github-actions[bot]"

  trivy:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Trivy
        uses: aquasecurity/setup-trivy@v0.2.2
        with:
          cache: true
          version: ${{ env.trivy_version }}

      - name: Test code with Trivy vulnerability scanner
        if: github.event_name == 'pull_request'
        uses: aquasecurity/trivy-action@0.29.0
        with:
          scan-type: "fs"
          scan-ref: "."
          trivy-config: trivy.yaml
          skip-setup-trivy: true
        continue-on-error: true

      - name: Test code with Trivy vulnerability scanner
        if: github.event_name != 'pull_request'
        uses: aquasecurity/trivy-action@0.29.0
        with:
          scan-type: "fs"
          scan-ref: "."
          trivy-config: trivy.yaml
          skip-setup-trivy: true
        continue-on-error: false

      - name: Report Trivy status to PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('./trivy-report.txt', 'utf8');
            const output = `Trivy report:
            \`\`\`\n
            ${report.length > 0 ? report : 'No issues found'}
            \`\`\`

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  tflint:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: ${{ env.tflint_version }}

      - name: Setup TFLint cache plugin dir
        uses: actions/cache@v4.1.2
        with:
          path: ~/.tflint.d/plugins
          key: tflint-${{ hashFiles('.tflint.hcl') }}

      - name: Test code with TFLint
        continue-on-error: true
        run: |
          tflint --init
          tflint -f compact

  tfsec:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Test code with TFSec
        continue-on-error: true
        uses: aquasecurity/tfsec-action@v1.0.3
        if: github.event_name != 'pull_request'
        with:
          soft_fail: true
          github_token: ${{ github.token }}

      - name: Test code with TFSec
        uses: aquasecurity/tfsec-pr-commenter-action@v1.2.0
        if: github.event_name == 'pull_request'
        with:
          github_token: ${{ github.token }}

  checkov:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Test code with Checkov
        uses: bridgecrewio/checkov-action@v12.2940.0
        with:
          directory: /
          framework: terraform
          soft_fail: true
          quiet: true
          download_external_modules: false
          output_format: cli,sarif
          output_file_path: console,results.sarif

      - name: Report Checkov status (upload SARIF file)
        if: success() || failure()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
